{% extends "layouts/privateLayout.njk" %}

{% block content %}
<h1>Lista de Roles</h1>
<hr />


<section>
    <div id="roleTableContainer"></div> <!-- Contenedor donde se renderizará la tabla de roles -->
</section>

<!-- Snackbar para mostrar mensajes -->
<div id="snackbar" class="snackbar"></div>


<script type="module">
import { renderTable } from '../js/components/common/table.js'; // Ajusta la ruta según sea necesario
import { renderPagination } from '../js/components/common/pagination.js'; // Ajusta la ruta según sea necesario

$(document).ready(function() {
    let currentPage = 1; // Página actual
    const usersPerPage = 5; // Número de roles por página
    let allUsers = []; // Almacenar todos los roles
    let userToDelete = null; // Almacenar el ID del rol a eliminar

    // Definición de encabezados
    const headers = ['Nombre', 'Apellidos', 'Correo', 'Contraseña','Género' ,'Roles'];

    // Obtener users cuando se carga la página
    fetchUsers();



    function fetchUsers() {
        apiFetch('/users/getUsers', 'GET')
            .then(response => {
                console.log('Respuesta de la API:', response);
                allUsers = response.users; // Almacenar todos los roles
                console.log('Roles cargados:', allUsers); // Imprimir roles en consola
                renderUsers(); // Renderizar la tabla con la paginación
            })
            .catch(function(xhr) {
                console.error('Error al obtener los roles:', xhr);
                showSnackbar('Error al cargar los roles', false);
            });
    }

    
        // Función para renderizar roles y paginación
    function renderUsers() {
        const tableData = allUsers.map(user => ({
            _id: user._id, // Asegúrate de que el ID esté aquí
            name: user.name,
            lastname: user.lastname,
            email: user.email,
            password: user.password,
            gender: user.gender,
            roles: user.roles.map(role => role.name).join(', '), // Convertir roles a cadena separada por comas
        }));

        // Renderizar la tabla
        const tableHtml = renderTable(headers, tableData, currentPage, usersPerPage);
        $('#roleTableContainer').html(tableHtml);

        // Renderizar la paginación
        const paginationHtml = renderPagination(currentPage, allUsers.length, usersPerPage, handlePageChange);
        $('#roleTableContainer').append(paginationHtml); // Agregar la paginación después de la tabla
    }

    // Manejar el cambio de página
    function handlePageChange(newPage) {
        currentPage = newPage; // Actualizar la página actual
        renderUsers(); // Renderizar roles y paginación nuevamente
    }

    // Manejar clic en botones de paginación
    $(document).on('click', '.page-button', function() {
        const newPage = parseInt($(this).data('page'));
        handlePageChange(newPage);
    });


});
</script>

{% endblock %}
