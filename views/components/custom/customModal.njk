<html isEditable="true"><head isEditable="true"></head><body isEditable="true"><div id="customModal" class="modal" style="display: none; opacity: 0;" isEditable="true">
  <div class="modal-content" id="modalContent" isEditable="true">
    <div class="modal-head" isEditable="true">
      <h3 class="modal-title" isEditable="true"></h3>
      <span class="close-button" id="closeButton" isEditable="true">×</span>
    </div>
    <div class="modal-body" isEditable="true">
      <p isEditable="true">Este es un modal con un tamaño ajustable según la configuración elegida.</p>
    </div>
    <div class="modal-actions" style="display: none;" isEditable="true">
      <button id="saveButton" isEditable="true">Guardar</button>
      <button id="cancelButton" isEditable="true">Cancelar</button>
    </div>
  </div>
</div>

<!-- Incluir el archivo de JavaScript como un módulo -->
<script type="module" isEditable="true">
  import { openModal, closeModal } from '../../js/components/custom/modal.js';

  // Manejo del cierre del modal al hacer clic fuera del contenido
  window.addEventListener('click', (event) => {
    const modal = document.getElementById('customModal');
    if (event.target === modal) {
      closeModal('customModal');
    }
  });

  // Manejo de apertura del modal
  document.querySelectorAll('.open-modal').forEach((button) => {
    button.addEventListener('click', () => {
      const size = button.getAttribute('data-size');
      const title = button.getAttribute('data-title');
      const showActions = button.getAttribute('data-show-actions') === 'true';
      openModal('customModal', size, title, showActions);
    });
  });

  // Cerrar modal con el botón de cerrar
  document.getElementById('closeButton').addEventListener('click', () => {
    closeModal('customModal');
  });

  // Cerrar modal con el botón de cancelar
  document.getElementById('cancelButton').addEventListener('click', () => {
    closeModal('customModal');
  });
</script>
</body></html>