{% extends "layouts/privateLayout.njk" %}

{% block content %}
<h1>Lista de Roles</h1>
<hr />

<button id="addRoleButton">Registrar Rol</button>
<section>
    <div id="roleTableContainer"></div> <!-- Contenedor donde se renderizará la tabla de roles -->
</section>

<!-- Snackbar para mostrar mensajes -->
<div id="snackbar" class="snackbar"></div>

<!-- Modal para registrar un nuevo rol -->
<div id="createRoleModal" class="modal">
    <div class="modal-content">
        <span class="close-button">&times;</span>
        <h2>Registrar Nuevo Rol</h2>
        <div id="createRoleFormContainer"></div>
    </div>
</div>

<!-- Modal para ver permisos -->
<div id="permissionsModal" class="modal">
    <div class="modal-content">
        <span class="close-button" id="closePermissionsModal">&times;</span>
        <h2>Permisos Disponibles</h2>
        <div id="permissionsContainer"></div>
        <button id="savePermissionsButton">Guardar Permisos</button>
    </div>
</div>
<!-- Modal para ver detalles de un rol -->
<div id="viewRoleModal" class="modal">
    <div class="modal-content">
        <span class="close-button">&times;</span>
        <h2>Detalles del Rol</h2>
        <div id="viewRoleFormContainer"></div>
    </div>
</div>
<script type="module">
import { renderTable } from './js/components/common/table.js'; // Ajusta la ruta según sea necesario
import { renderPagination } from './js/components/common/pagination.js'; // Ajusta la ruta según sea necesario
import { RegisterRole } from './js/logic/roles/register.js'; 
import { loadDetails } from './js/logic/common/detailItem.js'; // Importa la función genérica

$(document).ready(function() {
    let currentPage = 1; // Página actual
    const rolesPerPage = 5; // Número de roles por página
    let allRoles = []; // Almacenar todos los roles

    // Definición de encabezados
    const headers = ['Nombre del Rol', 'Alias', 'Descripción', 'Permisos'];

    // Inicializar la lógica de registro
    RegisterRole(fetchRoles); // Pasa la función fetchRoles para refrescar roles

    // Obtener roles cuando se carga la página
    fetchRoles();

    function fetchRoles() {
        apiFetch('/roles/api', 'GET')
            .then(response => {
                allRoles = response.roles; // Almacenar todos los roles
                renderRoles(); // Renderizar la tabla con la paginación
            })
            .catch(function(xhr) {
                console.error('Error al obtener los roles:', xhr);
                showSnackbar('Error al cargar los roles', false);
            });
    }

    // Función para renderizar roles y paginación
    function renderRoles() {
        const tableData = allRoles.map(role => ({
            _id: role._id,
            name: role.name,
            alias: role.alias,
            description: role.description || 'N/A',
            permissions: role.permissions ? role.permissions.map(p => p.name).join(', ') : 'N/A'
        }));

        // Renderizar la tabla
        const tableHtml = renderTable(headers, tableData, currentPage, rolesPerPage);
        $('#roleTableContainer').html(tableHtml);

        // Renderizar la paginación
        const paginationHtml = renderPagination(currentPage, allRoles.length, rolesPerPage, handlePageChange);
        $('#roleTableContainer').append(paginationHtml); // Agregar la paginación después de la tabla
    }

    // Manejar el cambio de página
    function handlePageChange(newPage) {
        currentPage = newPage; // Actualizar la página actual
        renderRoles(); // Renderizar roles y paginación nuevamente
    }

    // Manejar clic en el botón de ver detalles
    $(document).on('click', '.details-button', function() {
        const roleId = $(this).data('id');
        onAction('details', roleId); // Llamar a onAction directamente
    });

    // Función que maneja las acciones (detalles, editar, etc.)
    function onAction(action, roleId) {
        switch (action) {
            case 'details':
                // Llamar a loadDetails sin necesidad de definir campos manualmente
                loadDetails('roles', roleId)
                    .then(detailsHtml => {
                        $('#viewRoleFormContainer').html(detailsHtml); // Renderizar los detalles
                        $('#viewRoleModal').show(); // Mostrar modal de detalles
                    })
                    .catch(error => {
                        showSnackbar(error.message, false); // Mostrar error en Snackbar
                    });
                break;
            default:
                console.error('Acción no reconocida:', action);
        }
    }

    // Función para cerrar el modal
    $(document).on('click', '.close-button', function() {
        $('.modal').hide(); // Ocultar cualquier modal abierto
    });

    // Hacer la función onAction accesible globalmente
    window.onAction = onAction;
});
</script>



{% endblock %}
