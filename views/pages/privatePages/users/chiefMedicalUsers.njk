<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Selección de Género</title>
    <style>
        /* Estilo básico del botón */
        .gender-button {
            padding: 10px;
            background-color: #007bff;
            color: white;
            border: none;
            cursor: pointer;
        }

        .gender-button:hover {
            background-color: #0056b3;
        }

        /* Dropdown colapsable */
        .dropdown {
            position: fixed; /* Para mantener la posición fija */
            display: none;
            background-color: #fff;
            border: 1px solid #ccc;
            border-radius: 8px;
            box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);
            width: 200px;
            z-index: 9999; /* Para estar sobre cualquier otro contenido */
        }

        .dropdown.show {
            display: block;
        }

        .gender-option {
            padding: 10px;
            cursor: pointer;
            text-align: left;
            background-color: #f0f0f0;
            border-bottom: 1px solid #ccc;
        }

        .gender-option:last-child {
            border-bottom: none;
        }

        .gender-option:hover {
            background-color: #e0e0e0;
        }

        /* Flecha que indica colapso */
        .arrow {
            margin-left: 5px;
            display: inline-block;
            transform: rotate(0deg);
            transition: transform 0.3s ease;
        }

        .arrow.down {
            transform: rotate(180deg);
        }

        /* Para simular elevación */
        .elevated {
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1), 0px 8px 16px rgba(0, 0, 0, 0.2);
        }
    </style>
</head>
<body>
    <!-- Botón que abre el dropdown de selección de género -->
    <button id="genderButton" class="gender-button">
        Seleccionar Género <span class="arrow">▼</span>
    </button>

    <!-- Dropdown colapsable de selección de género -->
    <div id="genderDropdown" class="dropdown elevated">
        <div class="gender-option" data-gender="masculino">Masculino</div>
        <div class="gender-option" data-gender="femenino">Femenino</div>
        <div class="gender-option" data-gender="otro">Otro</div>
        <div class="gender-option" data-gender="no-binario">No Binario</div>
        <div class="gender-option" data-gender="prefiero-no-decirlo">Prefiero No Decirlo</div>
    </div>

    <input type="hidden" id="userGender" name="userGender">

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            setupGenderDropdown();  // Configura la selección de género y colapso
        });

        // Función para abrir/cerrar el dropdown y manejar la selección de género
        const setupGenderDropdown = () => {
            const genderButton = document.getElementById('genderButton');
            const genderDropdown = document.getElementById('genderDropdown');
            const arrow = genderButton.querySelector('.arrow');

            // Alterna el dropdown al hacer clic en el botón
            genderButton.addEventListener('click', () => {
                const isOpen = genderDropdown.classList.contains('show');
                if (isOpen) {
                    genderDropdown.classList.remove('show');
                    arrow.classList.remove('down');
                } else {
                    genderDropdown.classList.add('show');
                    arrow.classList.add('down');
                    adjustDropdownPlacement(genderButton, genderDropdown);  // Ajustar la colocación
                }
            });

            // Cierra el dropdown si se hace clic fuera de él
            document.addEventListener('click', (event) => {
                if (!genderButton.contains(event.target) && !genderDropdown.contains(event.target)) {
                    genderDropdown.classList.remove('show');
                    arrow.classList.remove('down');
                }
            });

            // Maneja la selección de género
            document.querySelectorAll('.gender-option').forEach(option => {
                option.addEventListener('click', (event) => {
                    const selectedGender = option.getAttribute('data-gender');
                    document.getElementById('userGender').value = selectedGender;  // Actualiza el campo oculto
                    genderButton.innerHTML = `${option.textContent} <span class="arrow down">▼</span>`;  // Actualiza el texto del botón
                    genderDropdown.classList.remove('show');  // Oculta el dropdown
                    arrow.classList.remove('down');
                });
            });
        };

        // Función para ajustar la colocación del dropdown
        const adjustDropdownPlacement = (button, dropdown) => {
            const buttonRect = button.getBoundingClientRect(); // Posición del botón
            const dropdownRect = dropdown.getBoundingClientRect(); // Posición del dropdown
            const windowHeight = window.innerHeight;
            const windowWidth = window.innerWidth;

            // Iniciar colocación predeterminada (debajo del botón)
            let top = buttonRect.bottom;
            let left = buttonRect.left;

            // Verificar si hay espacio abajo, de lo contrario, colocar arriba
            if (buttonRect.bottom + dropdownRect.height > windowHeight) {
                top = buttonRect.top - dropdownRect.height;
            }

            // Verificar si hay espacio a la derecha, de lo contrario, colocar a la izquierda
            if (buttonRect.left + dropdownRect.width > windowWidth) {
                left = buttonRect.right - dropdownRect.width;
            }

            // Asignar la nueva posición al dropdown
            dropdown.style.top = `${top}px`;
            dropdown.style.left = `${left}px`;
        };
    </script>
</body>
</html>
