<section>
  <div id="tableContainer"></div>

  <div
    id="snackbar"
    class="snackbar"
  ></div>

  <!-- Modal para agregar/editar usuarios -->
  <div
    class="modal"
    id="addUserModal"
    style="display: none"
  >
    <div class="modal-content">
      <span
        class="close-button"
        onclick="Modal.close('#addUserModal')"
        >×</span
      >
      <h2 class="modal-title"></h2>
      <form id="userForm">
        <label for="userName">Nombre:</label>
        <input
          type="text"
          id="userName"
          name="name"
        />

        <label for="userSurnames">Apellidos:</label>
        <input
          type="text"
          id="userSurnames"
          name="surnames"
        />

        <label for="userEmail">Correo:</label>
        <input
          type="email"
          id="userEmail"
          name="email"
        />

        <label for="userPassword">Contraseña:</label>
        <input
          type="password"
          id="userPassword"
          name="password"
        />

        <label for="userGender">Género:</label>
        <input
          type="text"
          id="userGender"
          name="gender"
        />
        <button
          type="button"
          id="selectGenderBtn"
        >
          Seleccionar Género
        </button>
        <br />
        <button
          type="button"
          id="selectRolesBtn"
        >
          Seleccionar Roles
        </button>
        <button
          type="submit"
          id="saveItemBtn"
        >
          Guardar
        </button>
      </form>
    </div>
  </div>

  <!-- Modal para seleccionar género -->
  <div
    class="modal"
    id="selectGenderModal"
    style="display: none"
  >
    <div class="modal-content">
      <span
        class="close-button"
        onclick="Modal.close('selectRolesModal')"
        >×</span
      >
      <h2 class="modal-title"></h2>
      <div id="genderContainer">
        <label>
          <input
            type="radio"
            name="gender"
            value="masculino"
          />
          Masculino
        </label>
        <label>
          <input
            type="radio"
            name="gender"
            value="femenino"
          />
          Femenino
        </label>
        <label>
          <input
            type="radio"
            name="gender"
            value="otro"
          />
          Otro
        </label>
      </div>
      <button
        type="button"
        id="saveGenderBtn"
      >
        Guardar Género
      </button>
    </div>
  </div>

  <!-- Modal para seleccionar roles -->
  <div
    class="modal"
    id="selectRolesModal"
    style="display: none"
  >
    <div class="modal-content">
      <span
        class="close-button"
        onclick="Modal.close('#selectRolesModal')"
        >×</span
      >
      <h2 class="modal-title"></h2>
      <div id="rolesContainer"></div>
      <button
        type="button"
        id="saveRolesBtn"
      >
        Guardar
      </button>
    </div>
  </div>
</section>

<!-- Snackbar para mostrar mensajes -->
<div
  id="snackbar"
  class="snackbar"
></div>

{% include "components/custom/common/deleteItem.njk" %} {% include
"components/custom/customPopover.njk" %}

<div class="view-toggle-buttons">
  <button
    id="addUserBtn"
    class="add-button"
    data-size="medium"
    {%
    if
    not
    isAuthenticated
    %}
    style="display: none"
    {%endif%}
  >
    Agregar Usuario
  </button>
  <button id="cardViewBtn">Vista Card</button>
  <button id="tableViewBtn">Vista Tabla</button>
</div>
<script type="module">
  import { fetchServices } from '../js/services/index.js';
  import { getState } from '../js/reducers/state.js';
  import { setupEventListeners } from '../js/logic/users/index.js';
  import { renderItems } from '../js/renders/renderItems.js';
  import { userRenderer } from '../js/renders/itemRender.js';
  import { userEndpoints } from '../js/config/apiEndpoints.js';
  import { loadUsers } from '../js/reducers/userReducer.js';
  import { onAction } from '../js/logic/users/actions.js';
  import {
    handleAddItem,
    handleEditItem,
    handleDeleteModalItem,
  } from '../js/logic/users/index.js';
  import { setupViewToggle } from '../js/utils/setupViewToggle.js';

  let currentPage = 1;
  const usersPerPage = 10;
  const headers = ['Nombre Completo', 'Correo', 'Género', 'Roles'];
  let filteredUsers = [];
  let currentView = 'table';

  const loadUsersList = async () => {
    console.log('Cargando lista de usuarios...');
    await fetchServices(userEndpoints, loadUsers);
    const { users } = getState();
    const roleAlias = '{{ roleAlias|lower }}';

    if (roleAlias) {
      filteredUsers = users.filter((user) =>
        user.roles.some((roleObj) => roleObj.alias.toLowerCase() === roleAlias)
      );
    } else {
      filteredUsers = users;
    }

    renderItems(
      currentView,
      filteredUsers,
      headers,
      currentPage,
      usersPerPage,
      document.getElementById('tableContainer'),
      userRenderer
    );
  };

  // Set up view toggle functionality
  setupViewToggle(
    document.getElementById('cardViewBtn'),
    document.getElementById('tableViewBtn'),
    renderItems,
    currentView,
    filteredUsers,
    headers,
    currentPage,
    usersPerPage,
    document.getElementById('tableContainer'),
    userRenderer
  );
  // Asigna los handlers
  const handlers = {
    handleAddItem,
    handleEditItem,
    handleDeleteModalItem,
  };
  loadUsersList();
  setupEventListeners(loadUsersList);
  window.onAction = (action, id) => onAction(action, id, 'users', handlers); // Aquí se pasa 'users' como argumento
</script>
