<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1.0"
    />
    <title>Calendario Colapsable con Gráfica</title>
    <style>
      /* Estilos del calendario */
      #calendarContainer {
        display: none;
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        background: #ffffff;
        border-radius: 10px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
        padding: 20px;
        z-index: 1000;
        transition: all 0.3s ease;
      }

      .calendar-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
        background-color: #2ecc71;
        color: white;
        padding: 10px;
        border-radius: 10px;
      }

      .calendar-days {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        gap: 5px;
        margin-top: 10px;
      }

      .day-header,
      .day {
        padding: 10px;
        border-radius: 5px;
        text-align: center;
        cursor: pointer;
      }

      .day-header {
        font-weight: bold;
        background-color: #2ecc71;
        color: white;
      }

      .day {
        background-color: #ecf0f1;
        color: #333;
        transition: background-color 0.3s;
      }

      .day:hover {
        background-color: #3498db;
        color: white;
      }

      .nav-button,
      .collapse-button {
        background-color: #2ecc71;
        color: white;
        border: none;
        padding: 10px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
      }

      .nav-button:hover,
      .collapse-button:hover {
        background-color: #27ae60;
      }

      .chart-container {
        margin-top: 20px;
        text-align: center;
      }
    </style>
  </head>
  <body>
    <h1>Calendario Colapsable con Gráfica</h1>
    <button
      class="collapse-button"
      id="toggleCalendarButton"
    >
      Mostrar Calendario
    </button>

    <div id="calendarContainer">
      <div class="calendar-header">
        <button
          id="prevMonth"
          class="nav-button"
        >
          &lt;
        </button>
        <h2
          id="calendarTitle"
          class="calendar-title"
        ></h2>
        <button
          id="nextMonth"
          class="nav-button"
        >
          &gt;
        </button>
      </div>
      <div
        class="calendar-days"
        id="calendarDays"
      ></div>
    </div>

    <!-- Contenedor de la gráfica -->
    <div class="chart-container">
      <canvas
        id="chart-1"
        width="400"
        height="200"
      ></canvas>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
      let currentDate = new Date();

      // Función para renderizar el calendario
      const renderCalendar = () => {
        const month = currentDate.getMonth();
        const year = currentDate.getFullYear();
        document.getElementById(
          'calendarTitle'
        ).textContent = `${currentDate.toLocaleString('default', {
          month: 'long',
        })} ${year}`;

        const firstDay = new Date(year, month, 1).getDay();
        const totalDays = new Date(year, month + 1, 0).getDate();
        const calendarDays = document.getElementById('calendarDays');
        calendarDays.innerHTML = '';

        // Agregar encabezados de días de la semana
        ['L', 'M', 'X', 'J', 'V', 'S', 'D'].forEach((header) => {
          const headerDiv = document.createElement('div');
          headerDiv.className = 'day-header';
          headerDiv.textContent = header;
          calendarDays.appendChild(headerDiv);
        });

        // Llenar días vacíos antes del primer día del mes
        for (let i = 0; i < (firstDay + 6) % 7; i++) {
          calendarDays.appendChild(document.createElement('div'));
        }

        // Agregar los días del mes
        for (let day = 1; day <= totalDays; day++) {
          const dayDiv = document.createElement('div');
          dayDiv.className = 'day';
          dayDiv.textContent = day;
          dayDiv.onclick = () => {
            updateGraph(year, month + 1, day); // Actualizar la gráfica con el día seleccionado
          };
          calendarDays.appendChild(dayDiv);
        }
      };

      // Función para actualizar la gráfica
      const updateGraph = (year, month, day = null) => {
        const chartData = generateMockDataForMonth(year, month, day);
        drawChart('chart-1', chartData, year, month, day);
      };

      // Genera datos de ejemplo para la gráfica
      const generateMockDataForMonth = (year, month, day = null) => {
        return day
          ? [{ label: `Día ${day}`, value: Math.random() * 100 }]
          : Array.from({ length: 30 }, (_, i) => ({
              label: `Día ${i + 1}`,
              value: Math.random() * 100,
            }));
      };

      // Función para dibujar el gráfico
      const drawChart = (chartId, data, year, month, day) => {
        const ctx = document.getElementById(chartId).getContext('2d');
        if (window.myChart) {
          window.myChart.destroy(); // Destruir gráfico anterior antes de redibujar
        }
        window.myChart = new Chart(ctx, {
          type: 'line',
          data: {
            labels: data.map((d) => d.label),
            datasets: [
              {
                label: `Datos para ${
                  day ? `Día ${day}` : `Mes ${month} Año ${year}`
                }`,
                data: data.map((d) => d.value),
                borderColor: 'rgba(46, 204, 113, 1)',
                fill: false,
              },
            ],
          },
        });
      };

      // Navegación del calendario
      const navigateMonth = (direction) => {
        currentDate.setMonth(currentDate.getMonth() + direction);
        renderCalendar();
        updateGraph(currentDate.getFullYear(), currentDate.getMonth() + 1); // Actualiza la gráfica al cambiar el mes
      };

      document.getElementById('prevMonth').onclick = () => navigateMonth(-1);
      document.getElementById('nextMonth').onclick = () => navigateMonth(1);

      // Toggle para mostrar/ocultar el calendario
      document.getElementById('toggleCalendarButton').onclick = () => {
        const calendarContainer = document.getElementById('calendarContainer');
        calendarContainer.style.display =
          calendarContainer.style.display === 'none' ||
          calendarContainer.style.display === ''
            ? 'block'
            : 'none';
        renderCalendar();
      };

      // Inicialización al cargar
      renderCalendar();
      updateGraph(currentDate.getFullYear(), currentDate.getMonth() + 1);
    </script>
  </body>
</html>
