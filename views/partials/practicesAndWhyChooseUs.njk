{% set isPublic=true %}

<div class="home-heading18">
  <h2 class="home-text24">Nuestras Especialidades</h2>
  <p class="home-text25">
    Nos dedicamos a ofrecerte los mejores servicios en diversas √°reas de la
    salud.
  </p>
</div>

<!-- Contenedor de especialidades (ya incluye el contenido) -->
<div
  id="docsContent"
  class="home-docs"
>
  {% include "pages/privatePages/specialty/verb/getAll.njk" %}
</div>

<!-- Bot√≥n para abrir el modal -->
<button
  id="openModal"
  class="open-modal-btn"
>
  Ver m√°s especialidades
</button>

<!-- Modal -->
<div
  id="specialtiesModal"
  class="modal"
  style="display: none; opacity: 0"
  isEditable="true"
>
  <div
    class="modal-content"
    id="modalContent"
    isEditable="true"
  >
    <div
      class="modal-head"
      isEditable="true"
    >
      <h3
        class="modal-title"
        isEditable="true"
      ></h3>
      <span
        class="close-button"
        id="closeButton"
        isEditable="true"
        >√ó</span
      >
    </div>
    <!-- Aqu√≠ va el spinner que ser√° mostrado cuando el modal est√© en fullscreen -->
    <div
      class="modal-spinner"
      style="display: none"
    >
      <div class="spinner"></div>
    </div>
    <div
      class="modal-body"
      isEditable="true"
      id="modalContent"
    ></div>
    <div
      class="modal-actions"
      style="display: none"
      isEditable="true"
    >
      <button
        id="saveButton"
        isEditable="true"
      >
        Guardar
      </button>
      <button
        id="cancelButton"
        isEditable="true"
      >
        Cancelar
      </button>
    </div>
  </div>
</div>

<!-- Script para manejar el modal -->
<!-- Enviar currentView con JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/crypto-js@3.1.9-1/crypto-js.js"></script>
<script type="module">
  import { openModal, closeModal } from './js/components/custom/modal.js';
  import { executeScripts } from './js/components/utils/index.js';

  const modal = document.getElementById('specialtiesModal');
  const openModalBtn = document.getElementById('openModal');
  const closeModalBtn = document.getElementById('closeButton');
  const docsContent = document.getElementById('docsContent');
  const modalContent = document.querySelector('#specialtiesModal .modal-body'); // Asegurar que sea el modal-body
  const modalTitle = document.querySelector('#specialtiesModal .modal-title'); // Obtener el t√≠tulo correctamente

  // üìå Verificamos en consola que los elementos existen
  console.log('üõ† modal:', modal);
  console.log('üõ† modalTitle:', modalTitle);
  console.log('üõ† modalContent:', modalContent);

  // ‚úÖ Evento para abrir el modal
  openModalBtn.addEventListener('click', function () {
    if (!modalTitle) {
      console.error('‚ùå No se encontr√≥ .modal-title dentro del modal.');
      return;
    }

    // üîπ Establecer el t√≠tulo ANTES de abrir el modal
    modalTitle.textContent = 'Especialidades M√©dicas';

    // üîπ Clonar el contenido sin `innerHTML`
    modalContent.innerHTML = ''; // Limpiar antes de insertar
    const clonedContent = docsContent.cloneNode(true);
    clonedContent.id = ''; // Eliminar el ID duplicado para evitar conflictos
    modalContent.appendChild(clonedContent);

    // üîπ Ejecutar scripts del contenido clonado
    executeScripts(clonedContent);

    // ‚úÖ Abrir el modal
    openModal(
      'specialtiesModal',
      'fullscreen',
      'Especialidades M√©dicas',
      '#f8f8f8'
    );
  });

  // ‚úÖ Evento para cerrar el modal
  closeModalBtn.addEventListener('click', function () {
    closeModal('specialtiesModal');
  });

  window.addEventListener('click', function (event) {
    if (event.target === modal) {
      closeModal('specialtiesModal');
    }
  });

  // Declaramos el valor de `currentView` en JavaScript
  const currentView = '';

  // Cifrar el valor de `currentView` antes de almacenarlo
  const encryptedcurrentView = CryptoJS.AES.encrypt(
    currentView,
    'secret-key'
  ).toString();

  // Almacenamos `encryptedcurrentView` en localStorage
  localStorage.setItem('currentView', encryptedcurrentView);

  // Verificamos que se ha almacenado correctamente el valor cifrado
  console.log(localStorage.getItem('currentView')); // Mostrar√°
</script>
